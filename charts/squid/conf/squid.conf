client_request_buffer_max_size {{ .Values.global.squid.client_request_buffer_max_size }} MB

#
# Recommended minimum configuration:
#

acl SSL_ports port 443
acl Safe_ports port 80		# http
acl Safe_ports port 443		# https
acl CONNECT method CONNECT

#
# Recommended minimum Access Permission configuration:
#
# Deny requests to certain unsafe ports
http_access deny !Safe_ports

# Deny CONNECT to other than secure SSL ports
http_access deny CONNECT !SSL_ports

# Only allow cachemgr access from localhost
http_access allow localhost manager
http_access deny manager

#-------------------------------------------------------------------------------
# Exstream CN - Reverse Proxy Config
#-------------------------------------------------------------------------------

# Squid normally listens to port 3128
# http_port 3128

# First, you have to tell Squid to listen on port 80 (usually), so set the http_port option with the defaultsite option telling Squid it's an accelerator for this site:
http_port {{ .Values.svc.port }} accel defaultsite={{ .Values.global.ingress.hostname }} no-vhost

# Next, you need to tell Squid where to find the real web servers:
#                                                                                          proxy  icp
#          hostname                                                                 type   port   port  options
#          ------------------------------------------------------------------------ ------ ----- -----  --------------------------------------------------
cache_peer {{ include "getServiceFqn" (dict "values" . "serviceName" "das") }}   parent  8081     0  no-query originserver login=PASSTHRU name=DAS
cache_peer {{ include "getServiceFqn" (dict "values" . "serviceName" "orchestration") }}   parent  8300     0  no-query originserver login=PASSTHRU name=Orchestration
cache_peer {{ include "getServiceFqn" (dict "values" . "serviceName" "batch") }}    parent  8100     0  no-query originserver login=PASSTHRU name=Batch
cache_peer {{ include "getServiceFqn" (dict "values" . "serviceName" "ondemand") }} parent  8200     0  no-query originserver login=PASSTHRU name=OnDemand
cache_peer {{ include "getServiceFqn" (dict "values" . "serviceName" "empower") }}   parent  9090     0  no-query originserver login=PASSTHRU name=Empower
cache_peer {{ include "getServiceFqn" (dict "values" . "serviceName" "rationalization") }}   parent  8051     0  no-query originserver login=PASSTHRU name=Rationalization

# And finally you need to set up access controls to allow access to your site without pushing other web requests to your web server.
acl acl_virus_scan req_header Content-Length ^[[:digit:]]{1,8}$
acl acl_das url_regex {{ include "getDasServiceUrlFilter" . }}
acl acl_orchestration url_regex {{ include "getOrchestrationServiceUrlFilter" . }}
acl acl_batch url_regex {{ include "getBatchServiceUrlFilter" . }}
acl acl_ondemand url_regex {{ include "getOndemandServiceUrlFilter" . }}
acl acl_empower url_regex {{ include "getEmpowerServiceUrlFilter" . }}
acl acl_rationalization url_regex {{ include "getRationalizationServiceUrlFilter" . }}

http_access allow acl_das
http_access allow acl_orchestration
http_access allow acl_batch
http_access allow acl_ondemand
http_access allow acl_empower
http_access allow acl_rationalization

cache_peer_access DAS allow acl_das
cache_peer_access DAS deny all

cache_peer_access Orchestration allow acl_orchestration
cache_peer_access Orchestration deny all

cache_peer_access Batch allow acl_batch
cache_peer_access Batch deny all

cache_peer_access OnDemand allow acl_ondemand
cache_peer_access OnDemand deny all

cache_peer_access Empower allow acl_empower
cache_peer_access Empower deny all

cache_peer_access Rationalization allow acl_rationalization
cache_peer_access Rationalization deny all

#-------------------------------------------------------------------------------

# Leave coredumps in the first cache dir
coredump_dir /var/spool/squid

#-------------------------------------------------------------------------------
# Exstream CN - Adaptation Parameters
#-------------------------------------------------------------------------------

icap_enable on
adaptation_send_client_ip on
adaptation_send_username on
icap_client_username_header X-Authenticated-User
icap_send_client_ip on
icap_preview_enable on
icap_preview_size 1024
icap_service service_avi_req reqmod_precache {{ .Values.global.squid.icapServiceUrl }} bypass=off
adaptation_access service_avi_req allow acl_virus_scan
adaptation_access service_avi_req deny all
icap_service service_avi_resp respmod_precache {{ .Values.global.squid.icapServiceUrl }} bypass=off
adaptation_access service_avi_resp allow all

#-------------------------------------------------------------------------------
# Exstream CN - Debug
#-------------------------------------------------------------------------------

logfile_rotate 1
debug_options ALL,1

{{- if (include "digChartOrGlobalValue" (list "ingress" "enabled" "true" .Values)) }}
{{- if .Values.global.empower.enabled }}
{{- $pathPrefix := include "getFrontEndUrlContextWithTrailingSlash" . }}
{{- if include "hasCapability" (dict "dot" . "capability" "networking.k8s.io/v1/Ingress") }}
apiVersion: networking.k8s.io/v1
{{ else }}
apiVersion: extensions/v1beta1
{{ end }}
kind: Ingress
metadata:
  name: {{ .Release.Name }}-empower-ingress
  {{- include "namespaceMetadata" . | nindent 2 }}
  annotations:
    {{- include "ingressAnnotations" (dict "Values" .Values "Capabilities" .Capabilities "Chart" .Chart "largeFileSupport" "true" "Release" .Release) | nindent 4 }}
{{ include "getExtraResourceAnnotations" (dict "dot" . "typeLabel" "ingress") | nindent 4 }}
  labels:
{{ include "getExtraResourceLabels" (dict "dot" . "typeLabel" "ingress") | nindent 4 }}
spec:
{{- include "ingressClassName" . | nindent 2 }}
{{- if .Values.global.tls.enabled }}
  tls:
  - hosts:
    - {{ .Values.global.ingress.hostname }}
    secretName: {{ template "tlsCertName" . }}
{{- end }}
  rules:
    - host: {{ .Values.global.ingress.hostname }}
      http:
        paths:
        - path: /{{ $pathPrefix }}{{ required "empower.ingress.pathName" .Values.ingress.pathName }}/
          backend:
            {{- include "getIngressBackend" . | nindent 12 }}
{{- if include "hasCapability" (dict "dot" . "capability" "networking.k8s.io/v1/Ingress") }}
          pathType: Prefix
{{ end }}

{{- end }}
{{- end }}
